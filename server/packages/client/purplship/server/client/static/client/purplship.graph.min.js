(self["webpackChunkpurplship_webapp"] = self["webpackChunkpurplship_webapp"] || []).push([["graph"],{

/***/ "./graphql/index.ts":
/*!**************************!*\
  !*** ./graphql/index.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./queries */ "./graphql/queries.ts"), exports);
__exportStar(__webpack_require__(/*! ./types */ "./graphql/types.ts"), exports);


/***/ }),

/***/ "./graphql/queries.ts":
/*!****************************!*\
  !*** ./graphql/queries.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GET_USER = exports.MUTATE_USER = exports.GET_USER_CONNECTIONS = exports.GET_TOKEN = exports.MUTATE_TOKEN = exports.DISCARD_COMMODITY = exports.DELETE_TEMPLATE = exports.UPDATED_TEMPLATE = exports.CREATE_TEMPLATE = exports.MUTATE_SYSTEM_CONNECTION = exports.GET_SYSTEM_CONNECTIONS = exports.GET_PARCEL_TEMPLATES = exports.GET_LOGS = exports.GET_LOG = exports.UPDATE_ORGANIZATION = exports.CREATE_ORGANIZATION = exports.DELETE_CONNECTION = exports.GET_ORGANIZATIONS = exports.UPDATE_CONNECTION = exports.CREATE_CONNECTION = exports.GET_DEFAULT_TEMPLATES = exports.GET_CUSTOMS_TEMPLATES = exports.GET_ADDRESS_TEMPLATES = void 0;
const client_1 = __webpack_require__(/*! @apollo/client */ "./node_modules/@apollo/client/index.js");
exports.GET_ADDRESS_TEMPLATES = client_1.gql `
query get_address_templates($offset: Int, $first: Int) {
  address_templates(offset: $offset, first: $first) {
    pageInfo {
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
    edges {
      node {
        id
        is_default
        label
        address {
          company_name
          person_name
          address_line1
          address_line2
          postal_code
          residential
          city
          state_code
          country_code
          email
          phone_number
          validation
          validate_location
        }
        created_at
        updated_at
      }
    }
  }
}
`;
exports.GET_CUSTOMS_TEMPLATES = client_1.gql `
query get_customs_info_templates($offset: Int, $first: Int) {
  customs_templates(offset: $offset, first: $first) {
    pageInfo { 
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
    edges {
      node {
        id
        label
        is_default
        customs {
          aes
          eel_pfc
          incoterm
          content_type
          commercial_invoice
          certificate_number
          content_description
          duty {
            paid_by
            currency
            account_number
            declared_value
            bill_to {
              company_name
              person_name
              address_line1
              address_line2
              postal_code
              residential
              city
              state_code
              country_code
              email
              phone_number
              validation
              validate_location
            }
            id
          }
          invoice
          invoice_date
          signer
          certify
          commodities {
            id
            sku
            weight
            quantity
            weight_unit
            description
            value_amount
            value_currency
            origin_country
          }
        }
      }
    }
  }
}
`;
exports.GET_DEFAULT_TEMPLATES = client_1.gql `
query get_default_templates {
  default_templates
}
`;
exports.CREATE_CONNECTION = client_1.gql `
  mutation create_connection($data: CreateConnectionInput!) {
    create_connection(input: $data) {
      id
      errors {
        field
        messages
      }
    }
  }
`;
exports.UPDATE_CONNECTION = client_1.gql `
  mutation update_connection($data: UpdateConnectionInput!) {
    update_connection(input: $data) {
      id
      errors {
        field
        messages
      }
    }
  }
`;
exports.GET_ORGANIZATIONS = client_1.gql `
query get_organizations {
  organizations {
    id
    name
    slug
    token
    user {
      email
      full_name
      is_admin
    }
    users {
      email
      full_name
      is_admin
    }
  }
}
`;
exports.DELETE_CONNECTION = client_1.gql `
  mutation delete_connection($data: DeleteConnectionInput!) {
    delete_connection(input: $data) {
      id
    }
  }
`;
exports.CREATE_ORGANIZATION = client_1.gql `
  mutation create_organization($data: CreateOrganizationInput!) {
    create_organization(input: $data) {
      id
      errors {
        field
        messages
      }
    }
  }
`;
exports.UPDATE_ORGANIZATION = client_1.gql `
  mutation update_organization($data: UpdateOrganizationInput!) {
    update_organization(input: $data) {
      id
      errors {
        field
        messages
      }
    }
  }
`;
exports.GET_LOG = client_1.gql `
query get_log($id: Int!) {
  log(id: $id) {
    id
    username_persistent
    requested_at
    response_ms
    path
    view
    view_method
    remote_addr
    host
    method
    query_params
    data
    response
    errors
    status_code
  }
}
`;
exports.GET_LOGS = client_1.gql `
query get_logs($offset: Int, $first: Int, $status: String) {
  logs(offset: $offset, first: $first, status: $status) {
    pageInfo {
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
    edges {
      node {
        id
        view
        view_method
        path
        data
        method
        response_ms
        remote_addr
        requested_at
        username_persistent
        status_code
        query_params
        host
        errors
        response
      }
    }
  }
}
`;
exports.GET_PARCEL_TEMPLATES = client_1.gql `
query get_parcel_templates($offset: Int, $first: Int) {
  parcel_templates(offset: $offset, first: $first) {
    pageInfo {
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
    edges {
      node {
        id
        is_default
        label
        parcel {
          width
          height
          length
          dimension_unit
          weight
          weight_unit
          packaging_type
          package_preset
        }
        created_at
        updated_at
      }
    }
  }
}
`;
exports.GET_SYSTEM_CONNECTIONS = client_1.gql `
query get_system_connections($test: Boolean) {
  system_connections(test: $test) {
    id
    carrier_id
    test
    active
    capabilities
    carrier_name
    enabled
  }
}
`;
exports.MUTATE_SYSTEM_CONNECTION = client_1.gql `
  mutation mutate_system_connection($data: SystemCarrierMutationInput!) {
    mutate_system_connection(input: $data) {
      carrier {
        id
        active
      }
    }
  }
`;
exports.CREATE_TEMPLATE = client_1.gql `
  mutation create_template($data: CreateTemplateInput!) {
    create_template(input: $data) {
      id
      errors {
        field
        messages
      }
    }
  }
`;
exports.UPDATED_TEMPLATE = client_1.gql `
  mutation update_template($data: UpdateTemplateInput!) {
    update_template(input: $data) {
      id
      errors {
        field
        messages
      }
    }
  }
`;
exports.DELETE_TEMPLATE = client_1.gql `
  mutation delete_template($data: DeleteTemplateInput!) {
    delete_template(input: $data) {
      id
    }
  }
`;
exports.DISCARD_COMMODITY = client_1.gql `
  mutation discard_commodity($data: DiscardCommodityInput!) {
    discard_commodity(input: $data) {
      id
    }
  }
`;
exports.MUTATE_TOKEN = client_1.gql `
mutation mutate_token($data: TokenMutationInput!) {
  mutate_token(input: $data) {
    token {
      key
    }
  }
}
`;
exports.GET_TOKEN = client_1.gql `
  query GetToken($org_id: String) {
    token(org_id: $org_id) {
      key
      created
    }
  }
`;
exports.GET_USER_CONNECTIONS = client_1.gql `
  query get_user_connections($test: Boolean) {
    user_connections(test: $test) {
      __typename
      ... on AramexSettings {
        id
        carrier_id
        carrier_name
        test
        active
        username
        password
        account_pin
        account_entity
        account_number
        account_country_code
      }
      ... on AustraliaPostSettings {
        id
        carrier_id
        carrier_name
        test
        active
        api_key
        password
        account_number
      }
      ... on CanadaPostSettings {
        id
        carrier_id
        carrier_name
        test
        active
        username
        password
        customer_number
        contract_id
      }
      ... on CanparSettings {
        id
        carrier_id
        carrier_name
        test
        active
        username
        password
      }
      ... on DHLExpressSettings {
        id
        carrier_id
        carrier_name
        test
        active
        site_id
        password
        account_number
        account_country_code
      }
      ... on DHLUniversalSettings {
        id
        carrier_id
        carrier_name
        test
        active
        consumer_key
        consumer_secret
      }
      ... on DicomSettings {
        id
        carrier_id
        carrier_name
        test
        active
        username
        password
        billing_account
      }
      ... on EShipperSettings {
        id
        carrier_id
        carrier_name
        test
        active
        username
        password
      }
      ... on FedexSettings {
        id
        carrier_id
        carrier_name
        test
        active
        account_number
        password
        meter_number
        user_key
        account_country_code
      }
      ... on FreightcomSettings {
        id
        carrier_id
        carrier_name
        test
        active
        username
        password
      }
      ... on PurolatorSettings {
        id
        carrier_id
        carrier_name
        test
        active
        username
        password
        account_number
        user_token
      }
      ... on RoyalMailSettings {
        id
        carrier_id
        carrier_name
        test
        active
        client_id
        client_secret
      }
      ... on SendleSettings {
        id
        carrier_id
        carrier_name
        test
        active
        sendle_id
        api_key
      }
      ... on SFExpressSettings {
        id
        carrier_id
        carrier_name
        test
        active
        partner_id
        check_word
      }
      ... on TNTSettings {
        id
        carrier_id
        carrier_name
        test
        active
        username
        password
        account_number
        account_country_code
      }
      ... on UPSSettings {
        id
        carrier_id
        carrier_name
        test
        active
        username
        password
        access_license_number
        account_number
        account_country_code
      }
      ... on USPSSettings {
        id
        carrier_id
        carrier_name
        test
        active
        username
        password
        mailer_id
        customer_registration_id
        logistics_manager_mailer_id
      }
      ... on USPSInternationalSettings {
        id
        carrier_id
        carrier_name
        test
        active
        username
        password
        mailer_id
        customer_registration_id
        logistics_manager_mailer_id
      }
      ... on YanwenSettings {
        id
        carrier_id
        carrier_name
        test
        active
        customer_number
        license_key
      }
      ... on YunExpressSettings {
        id
        carrier_id
        carrier_name
        test
        active
        customer_number
        api_secret
      }
    }
  }
`;
exports.MUTATE_USER = client_1.gql `
mutation mutate_user($data: UserMutationInput!) {
  mutate_user(input: $data) {
    email
    full_name
    is_staff
    last_login
    date_joined
    errors {
      field
      messages
    }
  }
}
`;
exports.GET_USER = client_1.gql `
query GetUser {
  user {
    email
    full_name
    is_staff
    last_login
    date_joined
  }
}
`;


/***/ }),

/***/ "./graphql/types.ts":
/*!**************************!*\
  !*** ./graphql/types.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/* tslint:disable */
// This file was automatically generated and should not be edited.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dimension_unit = exports.weight_unit = exports.incoterm = exports.origin_country = exports.value_currency = exports.ParcelWeightUnit = exports.ParcelDimensionUnit = exports.CommodityOriginCountry = exports.CommodityValueCurrency = exports.CommodityWeightUnit = exports.CustomsIncoterm = exports.AddressCountryCode = void 0;
/* tslint:disable */
// This file was automatically generated and should not be edited.
//==============================================================
// START Enums and Input Objects
//==============================================================
// An enumeration.
var AddressCountryCode;
(function (AddressCountryCode) {
    AddressCountryCode["AD"] = "AD";
    AddressCountryCode["AE"] = "AE";
    AddressCountryCode["AF"] = "AF";
    AddressCountryCode["AG"] = "AG";
    AddressCountryCode["AI"] = "AI";
    AddressCountryCode["AL"] = "AL";
    AddressCountryCode["AM"] = "AM";
    AddressCountryCode["AN"] = "AN";
    AddressCountryCode["AO"] = "AO";
    AddressCountryCode["AR"] = "AR";
    AddressCountryCode["AS"] = "AS";
    AddressCountryCode["AT"] = "AT";
    AddressCountryCode["AU"] = "AU";
    AddressCountryCode["AW"] = "AW";
    AddressCountryCode["AZ"] = "AZ";
    AddressCountryCode["BA"] = "BA";
    AddressCountryCode["BB"] = "BB";
    AddressCountryCode["BD"] = "BD";
    AddressCountryCode["BE"] = "BE";
    AddressCountryCode["BF"] = "BF";
    AddressCountryCode["BG"] = "BG";
    AddressCountryCode["BH"] = "BH";
    AddressCountryCode["BI"] = "BI";
    AddressCountryCode["BJ"] = "BJ";
    AddressCountryCode["BM"] = "BM";
    AddressCountryCode["BN"] = "BN";
    AddressCountryCode["BO"] = "BO";
    AddressCountryCode["BR"] = "BR";
    AddressCountryCode["BS"] = "BS";
    AddressCountryCode["BT"] = "BT";
    AddressCountryCode["BW"] = "BW";
    AddressCountryCode["BY"] = "BY";
    AddressCountryCode["BZ"] = "BZ";
    AddressCountryCode["CA"] = "CA";
    AddressCountryCode["CD"] = "CD";
    AddressCountryCode["CF"] = "CF";
    AddressCountryCode["CG"] = "CG";
    AddressCountryCode["CH"] = "CH";
    AddressCountryCode["CI"] = "CI";
    AddressCountryCode["CK"] = "CK";
    AddressCountryCode["CL"] = "CL";
    AddressCountryCode["CM"] = "CM";
    AddressCountryCode["CN"] = "CN";
    AddressCountryCode["CO"] = "CO";
    AddressCountryCode["CR"] = "CR";
    AddressCountryCode["CU"] = "CU";
    AddressCountryCode["CV"] = "CV";
    AddressCountryCode["CY"] = "CY";
    AddressCountryCode["CZ"] = "CZ";
    AddressCountryCode["DE"] = "DE";
    AddressCountryCode["DJ"] = "DJ";
    AddressCountryCode["DK"] = "DK";
    AddressCountryCode["DM"] = "DM";
    AddressCountryCode["DO"] = "DO";
    AddressCountryCode["DZ"] = "DZ";
    AddressCountryCode["EC"] = "EC";
    AddressCountryCode["EE"] = "EE";
    AddressCountryCode["EG"] = "EG";
    AddressCountryCode["ER"] = "ER";
    AddressCountryCode["ES"] = "ES";
    AddressCountryCode["ET"] = "ET";
    AddressCountryCode["FI"] = "FI";
    AddressCountryCode["FJ"] = "FJ";
    AddressCountryCode["FK"] = "FK";
    AddressCountryCode["FM"] = "FM";
    AddressCountryCode["FO"] = "FO";
    AddressCountryCode["FR"] = "FR";
    AddressCountryCode["GA"] = "GA";
    AddressCountryCode["GB"] = "GB";
    AddressCountryCode["GD"] = "GD";
    AddressCountryCode["GE"] = "GE";
    AddressCountryCode["GF"] = "GF";
    AddressCountryCode["GG"] = "GG";
    AddressCountryCode["GH"] = "GH";
    AddressCountryCode["GI"] = "GI";
    AddressCountryCode["GL"] = "GL";
    AddressCountryCode["GM"] = "GM";
    AddressCountryCode["GN"] = "GN";
    AddressCountryCode["GP"] = "GP";
    AddressCountryCode["GQ"] = "GQ";
    AddressCountryCode["GR"] = "GR";
    AddressCountryCode["GT"] = "GT";
    AddressCountryCode["GU"] = "GU";
    AddressCountryCode["GW"] = "GW";
    AddressCountryCode["GY"] = "GY";
    AddressCountryCode["HK"] = "HK";
    AddressCountryCode["HN"] = "HN";
    AddressCountryCode["HR"] = "HR";
    AddressCountryCode["HT"] = "HT";
    AddressCountryCode["HU"] = "HU";
    AddressCountryCode["IC"] = "IC";
    AddressCountryCode["ID"] = "ID";
    AddressCountryCode["IE"] = "IE";
    AddressCountryCode["IL"] = "IL";
    AddressCountryCode["IN"] = "IN";
    AddressCountryCode["IQ"] = "IQ";
    AddressCountryCode["IR"] = "IR";
    AddressCountryCode["IS"] = "IS";
    AddressCountryCode["IT"] = "IT";
    AddressCountryCode["JE"] = "JE";
    AddressCountryCode["JM"] = "JM";
    AddressCountryCode["JO"] = "JO";
    AddressCountryCode["JP"] = "JP";
    AddressCountryCode["KE"] = "KE";
    AddressCountryCode["KG"] = "KG";
    AddressCountryCode["KH"] = "KH";
    AddressCountryCode["KI"] = "KI";
    AddressCountryCode["KM"] = "KM";
    AddressCountryCode["KN"] = "KN";
    AddressCountryCode["KP"] = "KP";
    AddressCountryCode["KR"] = "KR";
    AddressCountryCode["KV"] = "KV";
    AddressCountryCode["KW"] = "KW";
    AddressCountryCode["KY"] = "KY";
    AddressCountryCode["KZ"] = "KZ";
    AddressCountryCode["LA"] = "LA";
    AddressCountryCode["LB"] = "LB";
    AddressCountryCode["LC"] = "LC";
    AddressCountryCode["LI"] = "LI";
    AddressCountryCode["LK"] = "LK";
    AddressCountryCode["LR"] = "LR";
    AddressCountryCode["LS"] = "LS";
    AddressCountryCode["LT"] = "LT";
    AddressCountryCode["LU"] = "LU";
    AddressCountryCode["LV"] = "LV";
    AddressCountryCode["LY"] = "LY";
    AddressCountryCode["MA"] = "MA";
    AddressCountryCode["MC"] = "MC";
    AddressCountryCode["MD"] = "MD";
    AddressCountryCode["ME"] = "ME";
    AddressCountryCode["MG"] = "MG";
    AddressCountryCode["MH"] = "MH";
    AddressCountryCode["MK"] = "MK";
    AddressCountryCode["ML"] = "ML";
    AddressCountryCode["MM"] = "MM";
    AddressCountryCode["MN"] = "MN";
    AddressCountryCode["MO"] = "MO";
    AddressCountryCode["MP"] = "MP";
    AddressCountryCode["MQ"] = "MQ";
    AddressCountryCode["MR"] = "MR";
    AddressCountryCode["MS"] = "MS";
    AddressCountryCode["MT"] = "MT";
    AddressCountryCode["MU"] = "MU";
    AddressCountryCode["MV"] = "MV";
    AddressCountryCode["MW"] = "MW";
    AddressCountryCode["MX"] = "MX";
    AddressCountryCode["MY"] = "MY";
    AddressCountryCode["MZ"] = "MZ";
    AddressCountryCode["NA"] = "NA";
    AddressCountryCode["NC"] = "NC";
    AddressCountryCode["NE"] = "NE";
    AddressCountryCode["NG"] = "NG";
    AddressCountryCode["NI"] = "NI";
    AddressCountryCode["NL"] = "NL";
    AddressCountryCode["NO"] = "NO";
    AddressCountryCode["NP"] = "NP";
    AddressCountryCode["NR"] = "NR";
    AddressCountryCode["NU"] = "NU";
    AddressCountryCode["NZ"] = "NZ";
    AddressCountryCode["OM"] = "OM";
    AddressCountryCode["PA"] = "PA";
    AddressCountryCode["PE"] = "PE";
    AddressCountryCode["PF"] = "PF";
    AddressCountryCode["PG"] = "PG";
    AddressCountryCode["PH"] = "PH";
    AddressCountryCode["PK"] = "PK";
    AddressCountryCode["PL"] = "PL";
    AddressCountryCode["PR"] = "PR";
    AddressCountryCode["PT"] = "PT";
    AddressCountryCode["PW"] = "PW";
    AddressCountryCode["PY"] = "PY";
    AddressCountryCode["QA"] = "QA";
    AddressCountryCode["RE"] = "RE";
    AddressCountryCode["RO"] = "RO";
    AddressCountryCode["RS"] = "RS";
    AddressCountryCode["RU"] = "RU";
    AddressCountryCode["RW"] = "RW";
    AddressCountryCode["SA"] = "SA";
    AddressCountryCode["SB"] = "SB";
    AddressCountryCode["SC"] = "SC";
    AddressCountryCode["SD"] = "SD";
    AddressCountryCode["SE"] = "SE";
    AddressCountryCode["SG"] = "SG";
    AddressCountryCode["SH"] = "SH";
    AddressCountryCode["SI"] = "SI";
    AddressCountryCode["SK"] = "SK";
    AddressCountryCode["SL"] = "SL";
    AddressCountryCode["SM"] = "SM";
    AddressCountryCode["SN"] = "SN";
    AddressCountryCode["SO"] = "SO";
    AddressCountryCode["SR"] = "SR";
    AddressCountryCode["SS"] = "SS";
    AddressCountryCode["ST"] = "ST";
    AddressCountryCode["SV"] = "SV";
    AddressCountryCode["SY"] = "SY";
    AddressCountryCode["SZ"] = "SZ";
    AddressCountryCode["TC"] = "TC";
    AddressCountryCode["TD"] = "TD";
    AddressCountryCode["TG"] = "TG";
    AddressCountryCode["TH"] = "TH";
    AddressCountryCode["TJ"] = "TJ";
    AddressCountryCode["TL"] = "TL";
    AddressCountryCode["TN"] = "TN";
    AddressCountryCode["TO"] = "TO";
    AddressCountryCode["TR"] = "TR";
    AddressCountryCode["TT"] = "TT";
    AddressCountryCode["TV"] = "TV";
    AddressCountryCode["TW"] = "TW";
    AddressCountryCode["TZ"] = "TZ";
    AddressCountryCode["UA"] = "UA";
    AddressCountryCode["UG"] = "UG";
    AddressCountryCode["US"] = "US";
    AddressCountryCode["UY"] = "UY";
    AddressCountryCode["UZ"] = "UZ";
    AddressCountryCode["VA"] = "VA";
    AddressCountryCode["VC"] = "VC";
    AddressCountryCode["VE"] = "VE";
    AddressCountryCode["VG"] = "VG";
    AddressCountryCode["VI"] = "VI";
    AddressCountryCode["VN"] = "VN";
    AddressCountryCode["VU"] = "VU";
    AddressCountryCode["WS"] = "WS";
    AddressCountryCode["XB"] = "XB";
    AddressCountryCode["XC"] = "XC";
    AddressCountryCode["XE"] = "XE";
    AddressCountryCode["XM"] = "XM";
    AddressCountryCode["XN"] = "XN";
    AddressCountryCode["XS"] = "XS";
    AddressCountryCode["XY"] = "XY";
    AddressCountryCode["YE"] = "YE";
    AddressCountryCode["YT"] = "YT";
    AddressCountryCode["ZA"] = "ZA";
    AddressCountryCode["ZM"] = "ZM";
    AddressCountryCode["ZW"] = "ZW";
})(AddressCountryCode = exports.AddressCountryCode || (exports.AddressCountryCode = {}));
// An enumeration.
var CustomsIncoterm;
(function (CustomsIncoterm) {
    CustomsIncoterm["CFR"] = "CFR";
    CustomsIncoterm["CIF"] = "CIF";
    CustomsIncoterm["CIP"] = "CIP";
    CustomsIncoterm["CPT"] = "CPT";
    CustomsIncoterm["DAF"] = "DAF";
    CustomsIncoterm["DDP"] = "DDP";
    CustomsIncoterm["DDU"] = "DDU";
    CustomsIncoterm["DEQ"] = "DEQ";
    CustomsIncoterm["DES"] = "DES";
    CustomsIncoterm["EXW"] = "EXW";
    CustomsIncoterm["FAS"] = "FAS";
    CustomsIncoterm["FCA"] = "FCA";
    CustomsIncoterm["FOB"] = "FOB";
})(CustomsIncoterm = exports.CustomsIncoterm || (exports.CustomsIncoterm = {}));
// An enumeration.
var CommodityWeightUnit;
(function (CommodityWeightUnit) {
    CommodityWeightUnit["KG"] = "KG";
    CommodityWeightUnit["LB"] = "LB";
})(CommodityWeightUnit = exports.CommodityWeightUnit || (exports.CommodityWeightUnit = {}));
// An enumeration.
var CommodityValueCurrency;
(function (CommodityValueCurrency) {
    CommodityValueCurrency["AED"] = "AED";
    CommodityValueCurrency["AMD"] = "AMD";
    CommodityValueCurrency["ANG"] = "ANG";
    CommodityValueCurrency["AOA"] = "AOA";
    CommodityValueCurrency["ARS"] = "ARS";
    CommodityValueCurrency["AUD"] = "AUD";
    CommodityValueCurrency["AWG"] = "AWG";
    CommodityValueCurrency["AZN"] = "AZN";
    CommodityValueCurrency["BAM"] = "BAM";
    CommodityValueCurrency["BBD"] = "BBD";
    CommodityValueCurrency["BDT"] = "BDT";
    CommodityValueCurrency["BGN"] = "BGN";
    CommodityValueCurrency["BHD"] = "BHD";
    CommodityValueCurrency["BIF"] = "BIF";
    CommodityValueCurrency["BMD"] = "BMD";
    CommodityValueCurrency["BND"] = "BND";
    CommodityValueCurrency["BOB"] = "BOB";
    CommodityValueCurrency["BRL"] = "BRL";
    CommodityValueCurrency["BSD"] = "BSD";
    CommodityValueCurrency["BTN"] = "BTN";
    CommodityValueCurrency["BWP"] = "BWP";
    CommodityValueCurrency["BYN"] = "BYN";
    CommodityValueCurrency["BZD"] = "BZD";
    CommodityValueCurrency["CAD"] = "CAD";
    CommodityValueCurrency["CDF"] = "CDF";
    CommodityValueCurrency["CHF"] = "CHF";
    CommodityValueCurrency["CLP"] = "CLP";
    CommodityValueCurrency["CNY"] = "CNY";
    CommodityValueCurrency["COP"] = "COP";
    CommodityValueCurrency["CRC"] = "CRC";
    CommodityValueCurrency["CUC"] = "CUC";
    CommodityValueCurrency["CVE"] = "CVE";
    CommodityValueCurrency["CZK"] = "CZK";
    CommodityValueCurrency["DJF"] = "DJF";
    CommodityValueCurrency["DKK"] = "DKK";
    CommodityValueCurrency["DOP"] = "DOP";
    CommodityValueCurrency["DZD"] = "DZD";
    CommodityValueCurrency["EGP"] = "EGP";
    CommodityValueCurrency["ERN"] = "ERN";
    CommodityValueCurrency["ETB"] = "ETB";
    CommodityValueCurrency["EUR"] = "EUR";
    CommodityValueCurrency["FJD"] = "FJD";
    CommodityValueCurrency["GBP"] = "GBP";
    CommodityValueCurrency["GEL"] = "GEL";
    CommodityValueCurrency["GHS"] = "GHS";
    CommodityValueCurrency["GMD"] = "GMD";
    CommodityValueCurrency["GNF"] = "GNF";
    CommodityValueCurrency["GTQ"] = "GTQ";
    CommodityValueCurrency["GYD"] = "GYD";
    CommodityValueCurrency["HKD"] = "HKD";
    CommodityValueCurrency["HNL"] = "HNL";
    CommodityValueCurrency["HRK"] = "HRK";
    CommodityValueCurrency["HTG"] = "HTG";
    CommodityValueCurrency["HUF"] = "HUF";
    CommodityValueCurrency["IDR"] = "IDR";
    CommodityValueCurrency["ILS"] = "ILS";
    CommodityValueCurrency["INR"] = "INR";
    CommodityValueCurrency["IRR"] = "IRR";
    CommodityValueCurrency["ISK"] = "ISK";
    CommodityValueCurrency["JMD"] = "JMD";
    CommodityValueCurrency["JOD"] = "JOD";
    CommodityValueCurrency["JPY"] = "JPY";
    CommodityValueCurrency["KES"] = "KES";
    CommodityValueCurrency["KGS"] = "KGS";
    CommodityValueCurrency["KHR"] = "KHR";
    CommodityValueCurrency["KMF"] = "KMF";
    CommodityValueCurrency["KPW"] = "KPW";
    CommodityValueCurrency["KRW"] = "KRW";
    CommodityValueCurrency["KWD"] = "KWD";
    CommodityValueCurrency["KYD"] = "KYD";
    CommodityValueCurrency["KZT"] = "KZT";
    CommodityValueCurrency["LAK"] = "LAK";
    CommodityValueCurrency["LKR"] = "LKR";
    CommodityValueCurrency["LRD"] = "LRD";
    CommodityValueCurrency["LSL"] = "LSL";
    CommodityValueCurrency["LYD"] = "LYD";
    CommodityValueCurrency["MAD"] = "MAD";
    CommodityValueCurrency["MDL"] = "MDL";
    CommodityValueCurrency["MGA"] = "MGA";
    CommodityValueCurrency["MKD"] = "MKD";
    CommodityValueCurrency["MMK"] = "MMK";
    CommodityValueCurrency["MNT"] = "MNT";
    CommodityValueCurrency["MOP"] = "MOP";
    CommodityValueCurrency["MRO"] = "MRO";
    CommodityValueCurrency["MUR"] = "MUR";
    CommodityValueCurrency["MVR"] = "MVR";
    CommodityValueCurrency["MWK"] = "MWK";
    CommodityValueCurrency["MXN"] = "MXN";
    CommodityValueCurrency["MYR"] = "MYR";
    CommodityValueCurrency["MZN"] = "MZN";
    CommodityValueCurrency["NAD"] = "NAD";
    CommodityValueCurrency["NGN"] = "NGN";
    CommodityValueCurrency["NIO"] = "NIO";
    CommodityValueCurrency["NOK"] = "NOK";
    CommodityValueCurrency["NPR"] = "NPR";
    CommodityValueCurrency["NZD"] = "NZD";
    CommodityValueCurrency["OMR"] = "OMR";
    CommodityValueCurrency["PEN"] = "PEN";
    CommodityValueCurrency["PGK"] = "PGK";
    CommodityValueCurrency["PHP"] = "PHP";
    CommodityValueCurrency["PKR"] = "PKR";
    CommodityValueCurrency["PLN"] = "PLN";
    CommodityValueCurrency["PYG"] = "PYG";
    CommodityValueCurrency["QAR"] = "QAR";
    CommodityValueCurrency["RSD"] = "RSD";
    CommodityValueCurrency["RUB"] = "RUB";
    CommodityValueCurrency["RWF"] = "RWF";
    CommodityValueCurrency["SAR"] = "SAR";
    CommodityValueCurrency["SBD"] = "SBD";
    CommodityValueCurrency["SCR"] = "SCR";
    CommodityValueCurrency["SDG"] = "SDG";
    CommodityValueCurrency["SEK"] = "SEK";
    CommodityValueCurrency["SGD"] = "SGD";
    CommodityValueCurrency["SHP"] = "SHP";
    CommodityValueCurrency["SLL"] = "SLL";
    CommodityValueCurrency["SOS"] = "SOS";
    CommodityValueCurrency["SRD"] = "SRD";
    CommodityValueCurrency["SSP"] = "SSP";
    CommodityValueCurrency["STD"] = "STD";
    CommodityValueCurrency["SYP"] = "SYP";
    CommodityValueCurrency["SZL"] = "SZL";
    CommodityValueCurrency["THB"] = "THB";
    CommodityValueCurrency["TJS"] = "TJS";
    CommodityValueCurrency["TND"] = "TND";
    CommodityValueCurrency["TOP"] = "TOP";
    CommodityValueCurrency["TRY"] = "TRY";
    CommodityValueCurrency["TTD"] = "TTD";
    CommodityValueCurrency["TWD"] = "TWD";
    CommodityValueCurrency["TZS"] = "TZS";
    CommodityValueCurrency["UAH"] = "UAH";
    CommodityValueCurrency["USD"] = "USD";
    CommodityValueCurrency["UYU"] = "UYU";
    CommodityValueCurrency["UZS"] = "UZS";
    CommodityValueCurrency["VEF"] = "VEF";
    CommodityValueCurrency["VND"] = "VND";
    CommodityValueCurrency["VUV"] = "VUV";
    CommodityValueCurrency["WST"] = "WST";
    CommodityValueCurrency["XAF"] = "XAF";
    CommodityValueCurrency["XCD"] = "XCD";
    CommodityValueCurrency["XOF"] = "XOF";
    CommodityValueCurrency["XPF"] = "XPF";
    CommodityValueCurrency["YER"] = "YER";
    CommodityValueCurrency["ZAR"] = "ZAR";
})(CommodityValueCurrency = exports.CommodityValueCurrency || (exports.CommodityValueCurrency = {}));
// An enumeration.
var CommodityOriginCountry;
(function (CommodityOriginCountry) {
    CommodityOriginCountry["AD"] = "AD";
    CommodityOriginCountry["AE"] = "AE";
    CommodityOriginCountry["AF"] = "AF";
    CommodityOriginCountry["AG"] = "AG";
    CommodityOriginCountry["AI"] = "AI";
    CommodityOriginCountry["AL"] = "AL";
    CommodityOriginCountry["AM"] = "AM";
    CommodityOriginCountry["AN"] = "AN";
    CommodityOriginCountry["AO"] = "AO";
    CommodityOriginCountry["AR"] = "AR";
    CommodityOriginCountry["AS"] = "AS";
    CommodityOriginCountry["AT"] = "AT";
    CommodityOriginCountry["AU"] = "AU";
    CommodityOriginCountry["AW"] = "AW";
    CommodityOriginCountry["AZ"] = "AZ";
    CommodityOriginCountry["BA"] = "BA";
    CommodityOriginCountry["BB"] = "BB";
    CommodityOriginCountry["BD"] = "BD";
    CommodityOriginCountry["BE"] = "BE";
    CommodityOriginCountry["BF"] = "BF";
    CommodityOriginCountry["BG"] = "BG";
    CommodityOriginCountry["BH"] = "BH";
    CommodityOriginCountry["BI"] = "BI";
    CommodityOriginCountry["BJ"] = "BJ";
    CommodityOriginCountry["BM"] = "BM";
    CommodityOriginCountry["BN"] = "BN";
    CommodityOriginCountry["BO"] = "BO";
    CommodityOriginCountry["BR"] = "BR";
    CommodityOriginCountry["BS"] = "BS";
    CommodityOriginCountry["BT"] = "BT";
    CommodityOriginCountry["BW"] = "BW";
    CommodityOriginCountry["BY"] = "BY";
    CommodityOriginCountry["BZ"] = "BZ";
    CommodityOriginCountry["CA"] = "CA";
    CommodityOriginCountry["CD"] = "CD";
    CommodityOriginCountry["CF"] = "CF";
    CommodityOriginCountry["CG"] = "CG";
    CommodityOriginCountry["CH"] = "CH";
    CommodityOriginCountry["CI"] = "CI";
    CommodityOriginCountry["CK"] = "CK";
    CommodityOriginCountry["CL"] = "CL";
    CommodityOriginCountry["CM"] = "CM";
    CommodityOriginCountry["CN"] = "CN";
    CommodityOriginCountry["CO"] = "CO";
    CommodityOriginCountry["CR"] = "CR";
    CommodityOriginCountry["CU"] = "CU";
    CommodityOriginCountry["CV"] = "CV";
    CommodityOriginCountry["CY"] = "CY";
    CommodityOriginCountry["CZ"] = "CZ";
    CommodityOriginCountry["DE"] = "DE";
    CommodityOriginCountry["DJ"] = "DJ";
    CommodityOriginCountry["DK"] = "DK";
    CommodityOriginCountry["DM"] = "DM";
    CommodityOriginCountry["DO"] = "DO";
    CommodityOriginCountry["DZ"] = "DZ";
    CommodityOriginCountry["EC"] = "EC";
    CommodityOriginCountry["EE"] = "EE";
    CommodityOriginCountry["EG"] = "EG";
    CommodityOriginCountry["ER"] = "ER";
    CommodityOriginCountry["ES"] = "ES";
    CommodityOriginCountry["ET"] = "ET";
    CommodityOriginCountry["FI"] = "FI";
    CommodityOriginCountry["FJ"] = "FJ";
    CommodityOriginCountry["FK"] = "FK";
    CommodityOriginCountry["FM"] = "FM";
    CommodityOriginCountry["FO"] = "FO";
    CommodityOriginCountry["FR"] = "FR";
    CommodityOriginCountry["GA"] = "GA";
    CommodityOriginCountry["GB"] = "GB";
    CommodityOriginCountry["GD"] = "GD";
    CommodityOriginCountry["GE"] = "GE";
    CommodityOriginCountry["GF"] = "GF";
    CommodityOriginCountry["GG"] = "GG";
    CommodityOriginCountry["GH"] = "GH";
    CommodityOriginCountry["GI"] = "GI";
    CommodityOriginCountry["GL"] = "GL";
    CommodityOriginCountry["GM"] = "GM";
    CommodityOriginCountry["GN"] = "GN";
    CommodityOriginCountry["GP"] = "GP";
    CommodityOriginCountry["GQ"] = "GQ";
    CommodityOriginCountry["GR"] = "GR";
    CommodityOriginCountry["GT"] = "GT";
    CommodityOriginCountry["GU"] = "GU";
    CommodityOriginCountry["GW"] = "GW";
    CommodityOriginCountry["GY"] = "GY";
    CommodityOriginCountry["HK"] = "HK";
    CommodityOriginCountry["HN"] = "HN";
    CommodityOriginCountry["HR"] = "HR";
    CommodityOriginCountry["HT"] = "HT";
    CommodityOriginCountry["HU"] = "HU";
    CommodityOriginCountry["IC"] = "IC";
    CommodityOriginCountry["ID"] = "ID";
    CommodityOriginCountry["IE"] = "IE";
    CommodityOriginCountry["IL"] = "IL";
    CommodityOriginCountry["IN"] = "IN";
    CommodityOriginCountry["IQ"] = "IQ";
    CommodityOriginCountry["IR"] = "IR";
    CommodityOriginCountry["IS"] = "IS";
    CommodityOriginCountry["IT"] = "IT";
    CommodityOriginCountry["JE"] = "JE";
    CommodityOriginCountry["JM"] = "JM";
    CommodityOriginCountry["JO"] = "JO";
    CommodityOriginCountry["JP"] = "JP";
    CommodityOriginCountry["KE"] = "KE";
    CommodityOriginCountry["KG"] = "KG";
    CommodityOriginCountry["KH"] = "KH";
    CommodityOriginCountry["KI"] = "KI";
    CommodityOriginCountry["KM"] = "KM";
    CommodityOriginCountry["KN"] = "KN";
    CommodityOriginCountry["KP"] = "KP";
    CommodityOriginCountry["KR"] = "KR";
    CommodityOriginCountry["KV"] = "KV";
    CommodityOriginCountry["KW"] = "KW";
    CommodityOriginCountry["KY"] = "KY";
    CommodityOriginCountry["KZ"] = "KZ";
    CommodityOriginCountry["LA"] = "LA";
    CommodityOriginCountry["LB"] = "LB";
    CommodityOriginCountry["LC"] = "LC";
    CommodityOriginCountry["LI"] = "LI";
    CommodityOriginCountry["LK"] = "LK";
    CommodityOriginCountry["LR"] = "LR";
    CommodityOriginCountry["LS"] = "LS";
    CommodityOriginCountry["LT"] = "LT";
    CommodityOriginCountry["LU"] = "LU";
    CommodityOriginCountry["LV"] = "LV";
    CommodityOriginCountry["LY"] = "LY";
    CommodityOriginCountry["MA"] = "MA";
    CommodityOriginCountry["MC"] = "MC";
    CommodityOriginCountry["MD"] = "MD";
    CommodityOriginCountry["ME"] = "ME";
    CommodityOriginCountry["MG"] = "MG";
    CommodityOriginCountry["MH"] = "MH";
    CommodityOriginCountry["MK"] = "MK";
    CommodityOriginCountry["ML"] = "ML";
    CommodityOriginCountry["MM"] = "MM";
    CommodityOriginCountry["MN"] = "MN";
    CommodityOriginCountry["MO"] = "MO";
    CommodityOriginCountry["MP"] = "MP";
    CommodityOriginCountry["MQ"] = "MQ";
    CommodityOriginCountry["MR"] = "MR";
    CommodityOriginCountry["MS"] = "MS";
    CommodityOriginCountry["MT"] = "MT";
    CommodityOriginCountry["MU"] = "MU";
    CommodityOriginCountry["MV"] = "MV";
    CommodityOriginCountry["MW"] = "MW";
    CommodityOriginCountry["MX"] = "MX";
    CommodityOriginCountry["MY"] = "MY";
    CommodityOriginCountry["MZ"] = "MZ";
    CommodityOriginCountry["NA"] = "NA";
    CommodityOriginCountry["NC"] = "NC";
    CommodityOriginCountry["NE"] = "NE";
    CommodityOriginCountry["NG"] = "NG";
    CommodityOriginCountry["NI"] = "NI";
    CommodityOriginCountry["NL"] = "NL";
    CommodityOriginCountry["NO"] = "NO";
    CommodityOriginCountry["NP"] = "NP";
    CommodityOriginCountry["NR"] = "NR";
    CommodityOriginCountry["NU"] = "NU";
    CommodityOriginCountry["NZ"] = "NZ";
    CommodityOriginCountry["OM"] = "OM";
    CommodityOriginCountry["PA"] = "PA";
    CommodityOriginCountry["PE"] = "PE";
    CommodityOriginCountry["PF"] = "PF";
    CommodityOriginCountry["PG"] = "PG";
    CommodityOriginCountry["PH"] = "PH";
    CommodityOriginCountry["PK"] = "PK";
    CommodityOriginCountry["PL"] = "PL";
    CommodityOriginCountry["PR"] = "PR";
    CommodityOriginCountry["PT"] = "PT";
    CommodityOriginCountry["PW"] = "PW";
    CommodityOriginCountry["PY"] = "PY";
    CommodityOriginCountry["QA"] = "QA";
    CommodityOriginCountry["RE"] = "RE";
    CommodityOriginCountry["RO"] = "RO";
    CommodityOriginCountry["RS"] = "RS";
    CommodityOriginCountry["RU"] = "RU";
    CommodityOriginCountry["RW"] = "RW";
    CommodityOriginCountry["SA"] = "SA";
    CommodityOriginCountry["SB"] = "SB";
    CommodityOriginCountry["SC"] = "SC";
    CommodityOriginCountry["SD"] = "SD";
    CommodityOriginCountry["SE"] = "SE";
    CommodityOriginCountry["SG"] = "SG";
    CommodityOriginCountry["SH"] = "SH";
    CommodityOriginCountry["SI"] = "SI";
    CommodityOriginCountry["SK"] = "SK";
    CommodityOriginCountry["SL"] = "SL";
    CommodityOriginCountry["SM"] = "SM";
    CommodityOriginCountry["SN"] = "SN";
    CommodityOriginCountry["SO"] = "SO";
    CommodityOriginCountry["SR"] = "SR";
    CommodityOriginCountry["SS"] = "SS";
    CommodityOriginCountry["ST"] = "ST";
    CommodityOriginCountry["SV"] = "SV";
    CommodityOriginCountry["SY"] = "SY";
    CommodityOriginCountry["SZ"] = "SZ";
    CommodityOriginCountry["TC"] = "TC";
    CommodityOriginCountry["TD"] = "TD";
    CommodityOriginCountry["TG"] = "TG";
    CommodityOriginCountry["TH"] = "TH";
    CommodityOriginCountry["TJ"] = "TJ";
    CommodityOriginCountry["TL"] = "TL";
    CommodityOriginCountry["TN"] = "TN";
    CommodityOriginCountry["TO"] = "TO";
    CommodityOriginCountry["TR"] = "TR";
    CommodityOriginCountry["TT"] = "TT";
    CommodityOriginCountry["TV"] = "TV";
    CommodityOriginCountry["TW"] = "TW";
    CommodityOriginCountry["TZ"] = "TZ";
    CommodityOriginCountry["UA"] = "UA";
    CommodityOriginCountry["UG"] = "UG";
    CommodityOriginCountry["US"] = "US";
    CommodityOriginCountry["UY"] = "UY";
    CommodityOriginCountry["UZ"] = "UZ";
    CommodityOriginCountry["VA"] = "VA";
    CommodityOriginCountry["VC"] = "VC";
    CommodityOriginCountry["VE"] = "VE";
    CommodityOriginCountry["VG"] = "VG";
    CommodityOriginCountry["VI"] = "VI";
    CommodityOriginCountry["VN"] = "VN";
    CommodityOriginCountry["VU"] = "VU";
    CommodityOriginCountry["WS"] = "WS";
    CommodityOriginCountry["XB"] = "XB";
    CommodityOriginCountry["XC"] = "XC";
    CommodityOriginCountry["XE"] = "XE";
    CommodityOriginCountry["XM"] = "XM";
    CommodityOriginCountry["XN"] = "XN";
    CommodityOriginCountry["XS"] = "XS";
    CommodityOriginCountry["XY"] = "XY";
    CommodityOriginCountry["YE"] = "YE";
    CommodityOriginCountry["YT"] = "YT";
    CommodityOriginCountry["ZA"] = "ZA";
    CommodityOriginCountry["ZM"] = "ZM";
    CommodityOriginCountry["ZW"] = "ZW";
})(CommodityOriginCountry = exports.CommodityOriginCountry || (exports.CommodityOriginCountry = {}));
// An enumeration.
var ParcelDimensionUnit;
(function (ParcelDimensionUnit) {
    ParcelDimensionUnit["CM"] = "CM";
    ParcelDimensionUnit["IN"] = "IN";
})(ParcelDimensionUnit = exports.ParcelDimensionUnit || (exports.ParcelDimensionUnit = {}));
// An enumeration.
var ParcelWeightUnit;
(function (ParcelWeightUnit) {
    ParcelWeightUnit["KG"] = "KG";
    ParcelWeightUnit["LB"] = "LB";
})(ParcelWeightUnit = exports.ParcelWeightUnit || (exports.ParcelWeightUnit = {}));
// An enumeration.
var value_currency;
(function (value_currency) {
    value_currency["AED"] = "AED";
    value_currency["AMD"] = "AMD";
    value_currency["ANG"] = "ANG";
    value_currency["AOA"] = "AOA";
    value_currency["ARS"] = "ARS";
    value_currency["AUD"] = "AUD";
    value_currency["AWG"] = "AWG";
    value_currency["AZN"] = "AZN";
    value_currency["BAM"] = "BAM";
    value_currency["BBD"] = "BBD";
    value_currency["BDT"] = "BDT";
    value_currency["BGN"] = "BGN";
    value_currency["BHD"] = "BHD";
    value_currency["BIF"] = "BIF";
    value_currency["BMD"] = "BMD";
    value_currency["BND"] = "BND";
    value_currency["BOB"] = "BOB";
    value_currency["BRL"] = "BRL";
    value_currency["BSD"] = "BSD";
    value_currency["BTN"] = "BTN";
    value_currency["BWP"] = "BWP";
    value_currency["BYN"] = "BYN";
    value_currency["BZD"] = "BZD";
    value_currency["CAD"] = "CAD";
    value_currency["CDF"] = "CDF";
    value_currency["CHF"] = "CHF";
    value_currency["CLP"] = "CLP";
    value_currency["CNY"] = "CNY";
    value_currency["COP"] = "COP";
    value_currency["CRC"] = "CRC";
    value_currency["CUC"] = "CUC";
    value_currency["CVE"] = "CVE";
    value_currency["CZK"] = "CZK";
    value_currency["DJF"] = "DJF";
    value_currency["DKK"] = "DKK";
    value_currency["DOP"] = "DOP";
    value_currency["DZD"] = "DZD";
    value_currency["EGP"] = "EGP";
    value_currency["ERN"] = "ERN";
    value_currency["ETB"] = "ETB";
    value_currency["EUR"] = "EUR";
    value_currency["FJD"] = "FJD";
    value_currency["GBP"] = "GBP";
    value_currency["GEL"] = "GEL";
    value_currency["GHS"] = "GHS";
    value_currency["GMD"] = "GMD";
    value_currency["GNF"] = "GNF";
    value_currency["GTQ"] = "GTQ";
    value_currency["GYD"] = "GYD";
    value_currency["HKD"] = "HKD";
    value_currency["HNL"] = "HNL";
    value_currency["HRK"] = "HRK";
    value_currency["HTG"] = "HTG";
    value_currency["HUF"] = "HUF";
    value_currency["IDR"] = "IDR";
    value_currency["ILS"] = "ILS";
    value_currency["INR"] = "INR";
    value_currency["IRR"] = "IRR";
    value_currency["ISK"] = "ISK";
    value_currency["JMD"] = "JMD";
    value_currency["JOD"] = "JOD";
    value_currency["JPY"] = "JPY";
    value_currency["KES"] = "KES";
    value_currency["KGS"] = "KGS";
    value_currency["KHR"] = "KHR";
    value_currency["KMF"] = "KMF";
    value_currency["KPW"] = "KPW";
    value_currency["KRW"] = "KRW";
    value_currency["KWD"] = "KWD";
    value_currency["KYD"] = "KYD";
    value_currency["KZT"] = "KZT";
    value_currency["LAK"] = "LAK";
    value_currency["LKR"] = "LKR";
    value_currency["LRD"] = "LRD";
    value_currency["LSL"] = "LSL";
    value_currency["LYD"] = "LYD";
    value_currency["MAD"] = "MAD";
    value_currency["MDL"] = "MDL";
    value_currency["MGA"] = "MGA";
    value_currency["MKD"] = "MKD";
    value_currency["MMK"] = "MMK";
    value_currency["MNT"] = "MNT";
    value_currency["MOP"] = "MOP";
    value_currency["MRO"] = "MRO";
    value_currency["MUR"] = "MUR";
    value_currency["MVR"] = "MVR";
    value_currency["MWK"] = "MWK";
    value_currency["MXN"] = "MXN";
    value_currency["MYR"] = "MYR";
    value_currency["MZN"] = "MZN";
    value_currency["NAD"] = "NAD";
    value_currency["NGN"] = "NGN";
    value_currency["NIO"] = "NIO";
    value_currency["NOK"] = "NOK";
    value_currency["NPR"] = "NPR";
    value_currency["NZD"] = "NZD";
    value_currency["OMR"] = "OMR";
    value_currency["PEN"] = "PEN";
    value_currency["PGK"] = "PGK";
    value_currency["PHP"] = "PHP";
    value_currency["PKR"] = "PKR";
    value_currency["PLN"] = "PLN";
    value_currency["PYG"] = "PYG";
    value_currency["QAR"] = "QAR";
    value_currency["RSD"] = "RSD";
    value_currency["RUB"] = "RUB";
    value_currency["RWF"] = "RWF";
    value_currency["SAR"] = "SAR";
    value_currency["SBD"] = "SBD";
    value_currency["SCR"] = "SCR";
    value_currency["SDG"] = "SDG";
    value_currency["SEK"] = "SEK";
    value_currency["SGD"] = "SGD";
    value_currency["SHP"] = "SHP";
    value_currency["SLL"] = "SLL";
    value_currency["SOS"] = "SOS";
    value_currency["SRD"] = "SRD";
    value_currency["SSP"] = "SSP";
    value_currency["STD"] = "STD";
    value_currency["SYP"] = "SYP";
    value_currency["SZL"] = "SZL";
    value_currency["THB"] = "THB";
    value_currency["TJS"] = "TJS";
    value_currency["TND"] = "TND";
    value_currency["TOP"] = "TOP";
    value_currency["TRY"] = "TRY";
    value_currency["TTD"] = "TTD";
    value_currency["TWD"] = "TWD";
    value_currency["TZS"] = "TZS";
    value_currency["UAH"] = "UAH";
    value_currency["USD"] = "USD";
    value_currency["UYU"] = "UYU";
    value_currency["UZS"] = "UZS";
    value_currency["VEF"] = "VEF";
    value_currency["VND"] = "VND";
    value_currency["VUV"] = "VUV";
    value_currency["WST"] = "WST";
    value_currency["XAF"] = "XAF";
    value_currency["XCD"] = "XCD";
    value_currency["XOF"] = "XOF";
    value_currency["XPF"] = "XPF";
    value_currency["YER"] = "YER";
    value_currency["ZAR"] = "ZAR";
})(value_currency = exports.value_currency || (exports.value_currency = {}));
// An enumeration.
var origin_country;
(function (origin_country) {
    origin_country["AD"] = "AD";
    origin_country["AE"] = "AE";
    origin_country["AF"] = "AF";
    origin_country["AG"] = "AG";
    origin_country["AI"] = "AI";
    origin_country["AL"] = "AL";
    origin_country["AM"] = "AM";
    origin_country["AN"] = "AN";
    origin_country["AO"] = "AO";
    origin_country["AR"] = "AR";
    origin_country["AS"] = "AS";
    origin_country["AT"] = "AT";
    origin_country["AU"] = "AU";
    origin_country["AW"] = "AW";
    origin_country["AZ"] = "AZ";
    origin_country["BA"] = "BA";
    origin_country["BB"] = "BB";
    origin_country["BD"] = "BD";
    origin_country["BE"] = "BE";
    origin_country["BF"] = "BF";
    origin_country["BG"] = "BG";
    origin_country["BH"] = "BH";
    origin_country["BI"] = "BI";
    origin_country["BJ"] = "BJ";
    origin_country["BM"] = "BM";
    origin_country["BN"] = "BN";
    origin_country["BO"] = "BO";
    origin_country["BR"] = "BR";
    origin_country["BS"] = "BS";
    origin_country["BT"] = "BT";
    origin_country["BW"] = "BW";
    origin_country["BY"] = "BY";
    origin_country["BZ"] = "BZ";
    origin_country["CA"] = "CA";
    origin_country["CD"] = "CD";
    origin_country["CF"] = "CF";
    origin_country["CG"] = "CG";
    origin_country["CH"] = "CH";
    origin_country["CI"] = "CI";
    origin_country["CK"] = "CK";
    origin_country["CL"] = "CL";
    origin_country["CM"] = "CM";
    origin_country["CN"] = "CN";
    origin_country["CO"] = "CO";
    origin_country["CR"] = "CR";
    origin_country["CU"] = "CU";
    origin_country["CV"] = "CV";
    origin_country["CY"] = "CY";
    origin_country["CZ"] = "CZ";
    origin_country["DE"] = "DE";
    origin_country["DJ"] = "DJ";
    origin_country["DK"] = "DK";
    origin_country["DM"] = "DM";
    origin_country["DO"] = "DO";
    origin_country["DZ"] = "DZ";
    origin_country["EC"] = "EC";
    origin_country["EE"] = "EE";
    origin_country["EG"] = "EG";
    origin_country["ER"] = "ER";
    origin_country["ES"] = "ES";
    origin_country["ET"] = "ET";
    origin_country["FI"] = "FI";
    origin_country["FJ"] = "FJ";
    origin_country["FK"] = "FK";
    origin_country["FM"] = "FM";
    origin_country["FO"] = "FO";
    origin_country["FR"] = "FR";
    origin_country["GA"] = "GA";
    origin_country["GB"] = "GB";
    origin_country["GD"] = "GD";
    origin_country["GE"] = "GE";
    origin_country["GF"] = "GF";
    origin_country["GG"] = "GG";
    origin_country["GH"] = "GH";
    origin_country["GI"] = "GI";
    origin_country["GL"] = "GL";
    origin_country["GM"] = "GM";
    origin_country["GN"] = "GN";
    origin_country["GP"] = "GP";
    origin_country["GQ"] = "GQ";
    origin_country["GR"] = "GR";
    origin_country["GT"] = "GT";
    origin_country["GU"] = "GU";
    origin_country["GW"] = "GW";
    origin_country["GY"] = "GY";
    origin_country["HK"] = "HK";
    origin_country["HN"] = "HN";
    origin_country["HR"] = "HR";
    origin_country["HT"] = "HT";
    origin_country["HU"] = "HU";
    origin_country["IC"] = "IC";
    origin_country["ID"] = "ID";
    origin_country["IE"] = "IE";
    origin_country["IL"] = "IL";
    origin_country["IN"] = "IN";
    origin_country["IQ"] = "IQ";
    origin_country["IR"] = "IR";
    origin_country["IS"] = "IS";
    origin_country["IT"] = "IT";
    origin_country["JE"] = "JE";
    origin_country["JM"] = "JM";
    origin_country["JO"] = "JO";
    origin_country["JP"] = "JP";
    origin_country["KE"] = "KE";
    origin_country["KG"] = "KG";
    origin_country["KH"] = "KH";
    origin_country["KI"] = "KI";
    origin_country["KM"] = "KM";
    origin_country["KN"] = "KN";
    origin_country["KP"] = "KP";
    origin_country["KR"] = "KR";
    origin_country["KV"] = "KV";
    origin_country["KW"] = "KW";
    origin_country["KY"] = "KY";
    origin_country["KZ"] = "KZ";
    origin_country["LA"] = "LA";
    origin_country["LB"] = "LB";
    origin_country["LC"] = "LC";
    origin_country["LI"] = "LI";
    origin_country["LK"] = "LK";
    origin_country["LR"] = "LR";
    origin_country["LS"] = "LS";
    origin_country["LT"] = "LT";
    origin_country["LU"] = "LU";
    origin_country["LV"] = "LV";
    origin_country["LY"] = "LY";
    origin_country["MA"] = "MA";
    origin_country["MC"] = "MC";
    origin_country["MD"] = "MD";
    origin_country["ME"] = "ME";
    origin_country["MG"] = "MG";
    origin_country["MH"] = "MH";
    origin_country["MK"] = "MK";
    origin_country["ML"] = "ML";
    origin_country["MM"] = "MM";
    origin_country["MN"] = "MN";
    origin_country["MO"] = "MO";
    origin_country["MP"] = "MP";
    origin_country["MQ"] = "MQ";
    origin_country["MR"] = "MR";
    origin_country["MS"] = "MS";
    origin_country["MT"] = "MT";
    origin_country["MU"] = "MU";
    origin_country["MV"] = "MV";
    origin_country["MW"] = "MW";
    origin_country["MX"] = "MX";
    origin_country["MY"] = "MY";
    origin_country["MZ"] = "MZ";
    origin_country["NA"] = "NA";
    origin_country["NC"] = "NC";
    origin_country["NE"] = "NE";
    origin_country["NG"] = "NG";
    origin_country["NI"] = "NI";
    origin_country["NL"] = "NL";
    origin_country["NO"] = "NO";
    origin_country["NP"] = "NP";
    origin_country["NR"] = "NR";
    origin_country["NU"] = "NU";
    origin_country["NZ"] = "NZ";
    origin_country["OM"] = "OM";
    origin_country["PA"] = "PA";
    origin_country["PE"] = "PE";
    origin_country["PF"] = "PF";
    origin_country["PG"] = "PG";
    origin_country["PH"] = "PH";
    origin_country["PK"] = "PK";
    origin_country["PL"] = "PL";
    origin_country["PR"] = "PR";
    origin_country["PT"] = "PT";
    origin_country["PW"] = "PW";
    origin_country["PY"] = "PY";
    origin_country["QA"] = "QA";
    origin_country["RE"] = "RE";
    origin_country["RO"] = "RO";
    origin_country["RS"] = "RS";
    origin_country["RU"] = "RU";
    origin_country["RW"] = "RW";
    origin_country["SA"] = "SA";
    origin_country["SB"] = "SB";
    origin_country["SC"] = "SC";
    origin_country["SD"] = "SD";
    origin_country["SE"] = "SE";
    origin_country["SG"] = "SG";
    origin_country["SH"] = "SH";
    origin_country["SI"] = "SI";
    origin_country["SK"] = "SK";
    origin_country["SL"] = "SL";
    origin_country["SM"] = "SM";
    origin_country["SN"] = "SN";
    origin_country["SO"] = "SO";
    origin_country["SR"] = "SR";
    origin_country["SS"] = "SS";
    origin_country["ST"] = "ST";
    origin_country["SV"] = "SV";
    origin_country["SY"] = "SY";
    origin_country["SZ"] = "SZ";
    origin_country["TC"] = "TC";
    origin_country["TD"] = "TD";
    origin_country["TG"] = "TG";
    origin_country["TH"] = "TH";
    origin_country["TJ"] = "TJ";
    origin_country["TL"] = "TL";
    origin_country["TN"] = "TN";
    origin_country["TO"] = "TO";
    origin_country["TR"] = "TR";
    origin_country["TT"] = "TT";
    origin_country["TV"] = "TV";
    origin_country["TW"] = "TW";
    origin_country["TZ"] = "TZ";
    origin_country["UA"] = "UA";
    origin_country["UG"] = "UG";
    origin_country["US"] = "US";
    origin_country["UY"] = "UY";
    origin_country["UZ"] = "UZ";
    origin_country["VA"] = "VA";
    origin_country["VC"] = "VC";
    origin_country["VE"] = "VE";
    origin_country["VG"] = "VG";
    origin_country["VI"] = "VI";
    origin_country["VN"] = "VN";
    origin_country["VU"] = "VU";
    origin_country["WS"] = "WS";
    origin_country["XB"] = "XB";
    origin_country["XC"] = "XC";
    origin_country["XE"] = "XE";
    origin_country["XM"] = "XM";
    origin_country["XN"] = "XN";
    origin_country["XS"] = "XS";
    origin_country["XY"] = "XY";
    origin_country["YE"] = "YE";
    origin_country["YT"] = "YT";
    origin_country["ZA"] = "ZA";
    origin_country["ZM"] = "ZM";
    origin_country["ZW"] = "ZW";
})(origin_country = exports.origin_country || (exports.origin_country = {}));
// An enumeration.
var incoterm;
(function (incoterm) {
    incoterm["CFR"] = "CFR";
    incoterm["CIF"] = "CIF";
    incoterm["CIP"] = "CIP";
    incoterm["CPT"] = "CPT";
    incoterm["DAF"] = "DAF";
    incoterm["DDP"] = "DDP";
    incoterm["DDU"] = "DDU";
    incoterm["DEQ"] = "DEQ";
    incoterm["DES"] = "DES";
    incoterm["EXW"] = "EXW";
    incoterm["FAS"] = "FAS";
    incoterm["FCA"] = "FCA";
    incoterm["FOB"] = "FOB";
})(incoterm = exports.incoterm || (exports.incoterm = {}));
// An enumeration.
var weight_unit;
(function (weight_unit) {
    weight_unit["KG"] = "KG";
    weight_unit["LB"] = "LB";
})(weight_unit = exports.weight_unit || (exports.weight_unit = {}));
// An enumeration.
var dimension_unit;
(function (dimension_unit) {
    dimension_unit["CM"] = "CM";
    dimension_unit["IN"] = "IN";
})(dimension_unit = exports.dimension_unit || (exports.dimension_unit = {}));
//==============================================================
// END Enums and Input Objects
//==============================================================


/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ "use strict";
/******/ 
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendor"], () => (__webpack_exec__("./graphql/index.ts")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=purplship.graph.min.js.map