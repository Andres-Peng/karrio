version: '3'

services:
  pship:
    build:
      context: ./
      dockerfile: ./.docker/Dockerfile
    image: purplship/purplship-server:latest
    container_name: pship
    env_file: .env
    volumes:
      - .:/pship/dev
      - pshipstatics:/pship/static
    ports:
      - "5002:5002"
    depends_on:
      - db
      - redis
    networks:
      - db_network
      - web_network
    entrypoint: |
      bash -c "bash -s <<EOF
      cd /pship/dev && pip install -f https://git.io/purplship -r requirements.dev.txt --upgrade &&
      if [[ "${TEST:-False}" == "True" ]];
      then
        source /pship/dev/scripts.sh && \
        test --no-insider && \
        cd /pship/dev && pip install -f https://git.io/purplship -r requirements.insider.dev.txt --upgrade && \
        test
      else
        export MULTI_TENANT_ENABLE=${MULTI_TENANT_ENABLE:-False}
        export DEBUG_MODE=${DEBUG_MODE:-False}
        cd /pship/dev && pip install -f https://git.io/purplship -r requirements.insider.dev.txt --upgrade && \
        cd /pship/app && /bin/bash ./entrypoint.sh
      fi
      EOF"

  worker:
    build:
      context: ./
      dockerfile: ./.docker/Dockerfile
    image: purplship/purplship-server:latest
    container_name: worker
    env_file: .env
    volumes:
      - .:/pship/dev
      - pshipdata:/pship/data
    depends_on:
      - db
    networks:
      - db_network
    entrypoint: |
      bash -c "bash -s <<EOF
      cd /pship/dev &&
      pip install -f https://git.io/purplship -r requirements.dev.txt --upgrade &&
      pip install -f https://git.io/purplship -r requirements.insider.dev.txt --upgrade &&
      cd /pship/app &&
      /bin/bash ./worker.sh
      EOF"

  nginx:
    container_name: nginx
    image: "nginx:latest"
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - pshipstatics:/static
    networks:
      - web_network
    depends_on:
      - pship

  db:
    image: postgres
    container_name: db
    environment:
      POSTGRES_DB: "db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: /var/lib/postgresql/data/pship
    ports:
      - "5432:5432"
    networks:
      - db_network

  redis:
    restart: always
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    depends_on:
      - db
    ports:
      - 8080:8080
    networks:
      - db_network


volumes:
  redisdata:
  pshipdata:
  pshipstatics:
    driver: local

networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge